/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */

package GUI.TTinh;

import BUS.KhuyenMaiBUS;
import BUS.KhuyenMaiBUS;
import BUS.KhuyenMaiBUS;
import DTO.KhuyenMaiDTO;
import DTO.KhuyenMaiDTO;
import DTO.KhuyenMaiDTO;
import DTO.KhuyenMaiDTO;
import com.formdev.flatlaf.extras.FlatSVGIcon;
import util.DateFormatter;

import javax.swing.*;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.Date;

/**
 *
 * @author QUAN
 */
public class KhuyenMai extends javax.swing.JPanel {

    private KhuyenMaiBUS khuyenMaiBUS;

    /** Creates new form KhuyenMai */
    public KhuyenMai() {
        initComponents();
        setUpTable();
        addIcon();

        initAtt();
        loadDataToTable();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scrollThuongHieu = new javax.swing.JScrollPane();
        tblKhuyenMai = new javax.swing.JTable();
        pnlTop = new javax.swing.JPanel();
        title = new javax.swing.JPanel();
        lblThuongHieu = new javax.swing.JLabel();
        tenThuongHieu = new javax.swing.JPanel();
        lblTenThuongHieu = new javax.swing.JLabel();
        txtTenKhuyenMai = new javax.swing.JTextField();
        lblTenThuongHieu1 = new javax.swing.JLabel();
        txtPhanTram = new javax.swing.JTextField();
        lblTenThuongHieu2 = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        lblTenThuongHieu3 = new javax.swing.JLabel();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();
        pnlLeft = new javax.swing.JPanel();
        btnThem = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnRefresh = new javax.swing.JButton();

        setLayout(new java.awt.BorderLayout());

        tblKhuyenMai.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"1", "Khuyến Mãi 2/9", "10", "01/09/2025", "03/09/2025"}
            },
            new String [] {
                "Mã khuyến mãi", "Tên khuyến mãi", "Phần trăm", "Ngày bắt đầu", "Ngày kết thúc"
            }
        ));
        tblKhuyenMai.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblKhuyenMaiMouseClicked(evt);
            }
        });
        scrollThuongHieu.setViewportView(tblKhuyenMai);
        if (tblKhuyenMai.getColumnModel().getColumnCount() > 0) {
            tblKhuyenMai.getColumnModel().getColumn(0).setResizable(false);
            tblKhuyenMai.getColumnModel().getColumn(1).setResizable(false);
            tblKhuyenMai.getColumnModel().getColumn(2).setResizable(false);
            tblKhuyenMai.getColumnModel().getColumn(3).setResizable(false);
            tblKhuyenMai.getColumnModel().getColumn(4).setResizable(false);
        }

        add(scrollThuongHieu, java.awt.BorderLayout.CENTER);

        title.setBackground(new java.awt.Color(255, 51, 0));
        title.setForeground(new java.awt.Color(255, 255, 255));

        lblThuongHieu.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        lblThuongHieu.setForeground(new java.awt.Color(255, 255, 255));
        lblThuongHieu.setText("KHUYẾN MÃI");
        title.add(lblThuongHieu);

        tenThuongHieu.setBackground(new java.awt.Color(255, 255, 255));
        tenThuongHieu.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 10, 5));

        lblTenThuongHieu.setText("Tên khuyến mãi :");
        tenThuongHieu.add(lblTenThuongHieu);

        txtTenKhuyenMai.setMinimumSize(new java.awt.Dimension(150, 30));
        txtTenKhuyenMai.setPreferredSize(new java.awt.Dimension(150, 30));
        tenThuongHieu.add(txtTenKhuyenMai);

        lblTenThuongHieu1.setText("Phần trăm:");
        tenThuongHieu.add(lblTenThuongHieu1);

        txtPhanTram.setMinimumSize(new java.awt.Dimension(150, 30));
        txtPhanTram.setPreferredSize(new java.awt.Dimension(150, 30));
        tenThuongHieu.add(txtPhanTram);

        lblTenThuongHieu2.setText("Ngày bắt đầu:");
        tenThuongHieu.add(lblTenThuongHieu2);

        jDateChooser1.setDateFormatString("yyyy-MM-dd");
        jDateChooser1.setMinimumSize(new java.awt.Dimension(82, 32));
        jDateChooser1.setPreferredSize(new java.awt.Dimension(150, 30));
        tenThuongHieu.add(jDateChooser1);
        jDateChooser1.getAccessibleContext().setAccessibleDescription("");

        lblTenThuongHieu3.setText("Ngày kết thúc:");
        tenThuongHieu.add(lblTenThuongHieu3);

        jDateChooser2.setDateFormatString("yyyy-MM-dd");
        jDateChooser2.setPreferredSize(new java.awt.Dimension(150, 30));
        tenThuongHieu.add(jDateChooser2);

        javax.swing.GroupLayout pnlTopLayout = new javax.swing.GroupLayout(pnlTop);
        pnlTop.setLayout(pnlTopLayout);
        pnlTopLayout.setHorizontalGroup(
            pnlTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(title, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(tenThuongHieu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pnlTopLayout.setVerticalGroup(
            pnlTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTopLayout.createSequentialGroup()
                .addComponent(title, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tenThuongHieu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        add(pnlTop, java.awt.BorderLayout.NORTH);

        pnlLeft.setBackground(new java.awt.Color(255, 255, 255));
        pnlLeft.setPreferredSize(new java.awt.Dimension(130, 580));

        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnRefresh.setText("Làm mới");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlLeftLayout = new javax.swing.GroupLayout(pnlLeft);
        pnlLeft.setLayout(pnlLeftLayout);
        pnlLeftLayout.setHorizontalGroup(
            pnlLeftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnThem, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
            .addComponent(btnSua, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(btnXoa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(btnRefresh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pnlLeftLayout.setVerticalGroup(
            pnlLeftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlLeftLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(237, Short.MAX_VALUE))
        );

        add(pnlLeft, java.awt.BorderLayout.WEST);
    }// </editor-fold>//GEN-END:initComponents

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // TODO add your handling code here:
        if (!this.isValidInput(txtTenKhuyenMai.getText(), txtPhanTram.getText(), jDateChooser1.getDate(), jDateChooser2.getDate())) {
            return;
        }

        int id = -1;
        String tenKhuyenMai = txtTenKhuyenMai.getText();
        double percent = Double.parseDouble(txtPhanTram.getText());
        Timestamp startDate = DateFormatter.toStartOfDay(jDateChooser1.getDate());
        Timestamp endDate = DateFormatter.toEndOfDay(jDateChooser2.getDate());

        KhuyenMaiDTO khuyenMaiDTO = new KhuyenMaiDTO(id, tenKhuyenMai, percent, startDate, endDate);
        int code = khuyenMaiBUS.themKhuyenMai(khuyenMaiDTO);

        if (code == 1) {
            // khachHangGUI.updateTable(khachHangDTO, 1);
            loadDataToTable();
            txtTenKhuyenMai.setText("");
            txtPhanTram.setText("");
            jDateChooser1.setDate(null);
            jDateChooser2.setDate(null);
        }
        dbRespondHandler(code, 1);

    }//GEN-LAST:event_btnThemActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:
        KhuyenMaiDTO selectedKhuyenMai = this.getSelectedRowData();
        if (selectedKhuyenMai != null) {
            int id = selectedKhuyenMai.getId();

            int confirm = JOptionPane.showConfirmDialog(null, "Bạn có chắc chắn muốn xóa khuyến mãi này?", "Xác nhận xóa", JOptionPane.YES_NO_OPTION);
            if (confirm == JOptionPane.YES_OPTION) {
                if(khuyenMaiBUS.xoaKhuyenMai(id)) {
                    JOptionPane.showMessageDialog(this, "Xóa khuyến mãi thành công", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                    loadDataToTable();
                } else {
                    JOptionPane.showMessageDialog(this, "Xóa khuyến mãi thất bại", "Lỗi", JOptionPane.ERROR_MESSAGE);
                }
            }

        } else {
            JOptionPane.showMessageDialog(null, "Vui lòng chọn khuyến mãi muốn xóa");
        }
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        // TODO add your handling code here:
        if (!this.isValidInput(txtTenKhuyenMai.getText(), txtPhanTram.getText(), jDateChooser1.getDate(), jDateChooser2.getDate())) {
            return;
        }

        KhuyenMaiDTO selectedKhuyenMai = this.getSelectedRowData();

        if (selectedKhuyenMai == null) {
            JOptionPane.showMessageDialog(null, "Vui lòng chọn khuyến mãi muốn sửa");
            return;
        }

        int id = selectedKhuyenMai.getId();
        String tenKhuyenMai = txtTenKhuyenMai.getText();
        double percent = Double.parseDouble(txtPhanTram.getText());
        Timestamp startDate = DateFormatter.toStartOfDay(jDateChooser1.getDate());
        Timestamp endDate = DateFormatter.toEndOfDay(jDateChooser2.getDate());

        KhuyenMaiDTO khuyenMaiDTO = new KhuyenMaiDTO(id, tenKhuyenMai, percent, startDate, endDate);
        int code = khuyenMaiBUS.suaKhuyenMai(khuyenMaiDTO);

        if (code == 1) {
            // khachHangGUI.updateTable(khachHangDTO, 1);
            loadDataToTable();
            txtTenKhuyenMai.setText("");
            txtPhanTram.setText("");
            jDateChooser1.setDate(null);
            jDateChooser2.setDate(null);
        }
        dbRespondHandler(code, 2);

    }//GEN-LAST:event_btnSuaActionPerformed

    private void tblKhuyenMaiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblKhuyenMaiMouseClicked
        // TODO add your handling code here:
        int selectedRow = tblKhuyenMai.getSelectedRow();
        if (selectedRow != -1) {
            String name = tblKhuyenMai.getValueAt(selectedRow, 1).toString();
            int discount = (int) tblKhuyenMai.getValueAt(selectedRow, 2);

            Timestamp startTimestamp = (Timestamp) tblKhuyenMai.getValueAt(selectedRow, 3);
            Timestamp endTimestamp = (Timestamp) tblKhuyenMai.getValueAt(selectedRow, 4);
            Date startDate = new Date(startTimestamp.getTime());
            Date endDate = new Date(endTimestamp.getTime());

            txtTenKhuyenMai.setText(name);
            txtPhanTram.setText(Integer.toString(discount));
            jDateChooser1.setDate(startDate);
            jDateChooser2.setDate(endDate);
        }
    }//GEN-LAST:event_tblKhuyenMaiMouseClicked

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        // TODO add your handling code here:
        txtTenKhuyenMai.setText("");
        txtPhanTram.setText("");
        jDateChooser1.setDate(null);
        jDateChooser2.setDate(null);

        tblKhuyenMai.clearSelection();
    }//GEN-LAST:event_btnRefreshActionPerformed

    private void initAtt() {
        this.khuyenMaiBUS = new KhuyenMaiBUS();
    }

    private void setUpTable() {
        // Set ẩn hiển thị ô vuông khi bấm vào cell 
        tblKhuyenMai.setFocusable(false);
        
        // Set không cho cell có thể chỉnh sửa 
        tblKhuyenMai.setDefaultEditor(Object.class, null);
    }
    
    private void addIcon() {
        btnThem.setIcon(new FlatSVGIcon("./res/icon/add.svg"));
        btnSua.setIcon(new FlatSVGIcon("./res/icon/edit.svg"));
        btnXoa.setIcon(new FlatSVGIcon("./res/icon/delete.svg"));
        btnRefresh.setIcon(new FlatSVGIcon("./res/icon/refresh.svg"));
    }

    private void loadDataToTable() {
        KhuyenMaiBUS khuyenMaiBUS = new KhuyenMaiBUS();
        ArrayList<KhuyenMaiDTO> khuyenMaiDTOArrayList = khuyenMaiBUS.getAllKhuyenMais();

        DefaultTableModel model = (DefaultTableModel) tblKhuyenMai.getModel();
        model.setRowCount(0);

        for (KhuyenMaiDTO khuyenMaiDTO : khuyenMaiDTOArrayList) {
            model.addRow(new Object[]{
                    khuyenMaiDTO.getId(),
                    khuyenMaiDTO.getName(),
                    (int) khuyenMaiDTO.getDiscountPercent(),
                    khuyenMaiDTO.getStartDate(),
                    khuyenMaiDTO.getEndDate()
            });
        }

        DefaultTableCellRenderer renderer = new DefaultTableCellRenderer();
        renderer.setHorizontalAlignment(SwingConstants.CENTER);

        for (int i = 0; i < tblKhuyenMai.getColumnCount(); i++) {
            tblKhuyenMai.getColumnModel().getColumn(i).setCellRenderer(renderer);
        }
    }

    private boolean isValidInput(String tenKhuyenMai, String txtPercent, Date startDateRaw, Date endDateRaw) {
        // 1. Kiểm tra tên không được để trống
        if (tenKhuyenMai == null || tenKhuyenMai.trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Tên khuyến mãi không được để trống!", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return false;
        }

        // 2. Kiểm tra phần trăm hợp lệ (số thực, trong khoảng 0-100)
        double percent;
        try {
            percent = Double.parseDouble(txtPercent);
            if (percent < 0 || percent > 100) {
                JOptionPane.showMessageDialog(this, "Phần trăm khuyến mãi phải nằm trong khoảng từ 0 đến 100!", "Lỗi", JOptionPane.ERROR_MESSAGE);
                return false;
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Phần trăm khuyến mãi phải là số hợp lệ!", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return false;
        }

        // 3. Kiểm tra ngày không được null
        if (startDateRaw == null || endDateRaw == null) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn đầy đủ ngày bắt đầu và ngày kết thúc!", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return false;
        }

        // 4. Ép ngày về Timestamp để so sánh chính xác hơn
        Timestamp startDate = DateFormatter.toStartOfDay(startDateRaw);
        Timestamp endDate = DateFormatter.toEndOfDay(endDateRaw);

        // 5. Kiểm tra ngày bắt đầu không sau ngày kết thúc
        if (startDate.after(endDate)) {
            JOptionPane.showMessageDialog(this, "Ngày bắt đầu phải trước hoặc bằng ngày kết thúc!", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return false;
        }

        return true; // Hợp lệ
    }

    private void dbRespondHandler(int code, int _case) {
        if (_case == 1) {
            if (code == 1) {
                JOptionPane.showMessageDialog(this, "Thêm khuyến mãi thành công", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
            } else if (code == -1) {
                JOptionPane.showMessageDialog(this, "Lỗi! Tên khuyến mãi này đã tồn tại.", "Lỗi", JOptionPane.ERROR_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "Thêm khuyến mãi thất bại", "Lỗi", JOptionPane.ERROR_MESSAGE);
            }
        } else if (_case == 2) {
            if (code == 1) {
                JOptionPane.showMessageDialog(this, "Sửa khuyến mãi thành công", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
            } else if (code == -1) {
                JOptionPane.showMessageDialog(this, "Lỗi! Tên khuyến mãi này đã tồn tại.", "Lỗi", JOptionPane.ERROR_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "Sửa khuyến mãi thất bại", "Lỗi", JOptionPane.ERROR_MESSAGE);
            }
        }
    }

    private KhuyenMaiDTO getSelectedRowData() {
        int selectedRowIndex = tblKhuyenMai.getSelectedRow();

        if (selectedRowIndex == -1) {
            return null;
        }

        int id = (int) tblKhuyenMai.getValueAt(selectedRowIndex, 0);
        return khuyenMaiBUS.getKhuyenMai(id);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnXoa;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private com.toedter.calendar.JDateChooser jDateChooser2;
    private javax.swing.JLabel lblTenThuongHieu;
    private javax.swing.JLabel lblTenThuongHieu1;
    private javax.swing.JLabel lblTenThuongHieu2;
    private javax.swing.JLabel lblTenThuongHieu3;
    private javax.swing.JLabel lblThuongHieu;
    private javax.swing.JPanel pnlLeft;
    private javax.swing.JPanel pnlTop;
    private javax.swing.JScrollPane scrollThuongHieu;
    private javax.swing.JTable tblKhuyenMai;
    private javax.swing.JPanel tenThuongHieu;
    private javax.swing.JPanel title;
    private javax.swing.JTextField txtPhanTram;
    private javax.swing.JTextField txtTenKhuyenMai;
    // End of variables declaration//GEN-END:variables

}
