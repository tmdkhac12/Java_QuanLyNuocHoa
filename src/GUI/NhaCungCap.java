/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */

package GUI;

import BUS.NhaCungCapBUS;
import DTO.NhaCungCapDTO;
import GUI.NCC.ChiTietNCC;
import GUI.NCC.SuaNCC;
import GUI.NCC.ThemNCC;
import com.formdev.flatlaf.extras.FlatSVGIcon;

import javax.swing.*;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import java.util.ArrayList;

/**
 *
 * @author Admin
 */
public class NhaCungCap extends javax.swing.JPanel {

    private NhaCungCapBUS nhaCungCapBUS;

    /** Creates new form NhaCungCap */
    public NhaCungCap() {
        initComponents();
        addIcon();
        setUpTable();

        initAtt();
        loadNCCData();
        timKiemHandler();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlTop = new javax.swing.JPanel();
        btnThemNhaCC = new javax.swing.JButton();
        btnSuaNhaCC = new javax.swing.JButton();
        btnXoaNhaCC = new javax.swing.JButton();
        btnChiTietNCC = new javax.swing.JButton();
        btnXuatExcelNCC = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtTimKiem = new javax.swing.JTextField();
        pnlCenter = new javax.swing.JPanel();
        asd = new javax.swing.JScrollPane();
        tblNhaCC = new javax.swing.JTable();

        setPreferredSize(new java.awt.Dimension(1200, 800));
        setLayout(new java.awt.BorderLayout());

        pnlTop.setBackground(new java.awt.Color(255, 255, 255));
        pnlTop.setPreferredSize(new java.awt.Dimension(1200, 70));

        btnThemNhaCC.setText("Thêm");
        btnThemNhaCC.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnThemNhaCC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemNhaCCActionPerformed(evt);
            }
        });
        pnlTop.add(btnThemNhaCC);

        btnSuaNhaCC.setText("Sửa");
        btnSuaNhaCC.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSuaNhaCC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaNhaCCActionPerformed(evt);
            }
        });
        pnlTop.add(btnSuaNhaCC);

        btnXoaNhaCC.setText("Xóa");
        btnXoaNhaCC.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnXoaNhaCC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaNhaCCActionPerformed(evt);
            }
        });
        pnlTop.add(btnXoaNhaCC);

        btnChiTietNCC.setText("Chi tiết");
        btnChiTietNCC.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnChiTietNCC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChiTietNCCActionPerformed(evt);
            }
        });
        pnlTop.add(btnChiTietNCC);

        btnXuatExcelNCC.setText("Xuất excel");
        btnXuatExcelNCC.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnXuatExcelNCC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXuatExcelNCCActionPerformed(evt);
            }
        });
        pnlTop.add(btnXuatExcelNCC);

        jLabel1.setText("Tìm kiếm :");
        pnlTop.add(jLabel1);

        txtTimKiem.setMinimumSize(new java.awt.Dimension(200, 30));
        txtTimKiem.setPreferredSize(new java.awt.Dimension(200, 30));
        pnlTop.add(txtTimKiem);

        add(pnlTop, java.awt.BorderLayout.NORTH);

        pnlCenter.setPreferredSize(new java.awt.Dimension(1200, 700));

        tblNhaCC.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"1", "Alex Supplier", "0933486531", "alex12@gmail.com"},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Mã NCC", "Tên nhà cung cấp", "Điện thoại", "Email"
            }
        ));
        asd.setViewportView(tblNhaCC);

        javax.swing.GroupLayout pnlCenterLayout = new javax.swing.GroupLayout(pnlCenter);
        pnlCenter.setLayout(pnlCenterLayout);
        pnlCenterLayout.setHorizontalGroup(
            pnlCenterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(asd, javax.swing.GroupLayout.DEFAULT_SIZE, 842, Short.MAX_VALUE)
        );
        pnlCenterLayout.setVerticalGroup(
            pnlCenterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(asd, javax.swing.GroupLayout.DEFAULT_SIZE, 440, Short.MAX_VALUE)
        );

        add(pnlCenter, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void btnThemNhaCCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemNhaCCActionPerformed
        // TODO add your handling code here:
        new ThemNCC(this).setVisible(true);
    }//GEN-LAST:event_btnThemNhaCCActionPerformed

    private void btnSuaNhaCCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaNhaCCActionPerformed
        // TODO add your handling code here:
        NhaCungCapDTO selectedNCC = this.getSelectedRowData();
        if (selectedNCC != null) {
            new SuaNCC(this, selectedNCC).setVisible(true);
        } else {
            JOptionPane.showMessageDialog(null, "Vui lòng chọn nhà cung cấp muốn sửa thông tin");
        }
    }//GEN-LAST:event_btnSuaNhaCCActionPerformed

    private void btnXoaNhaCCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaNhaCCActionPerformed
        // TODO add your handling code here:
        NhaCungCapDTO selectedNhaCungCap = this.getSelectedRowData();
        if (selectedNhaCungCap != null) {
            int id = selectedNhaCungCap.getId();

            int confirm = JOptionPane.showConfirmDialog(null, "Bạn có chắc chắn muốn xóa nhà cung cấp này?", "Xác nhận xóa", JOptionPane.YES_NO_OPTION);
            if (confirm == JOptionPane.YES_OPTION) {
                if(nhaCungCapBUS.xoaNhaCungCap(id)) {
                    JOptionPane.showMessageDialog(this, "Xóa nhà cung cấp thành công", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                    loadNCCData();
                } else {
                    JOptionPane.showMessageDialog(this, "Xóa nhà cung cấp thất bại", "Lỗi", JOptionPane.ERROR_MESSAGE);
                }
            }

        } else {
            JOptionPane.showMessageDialog(null, "Vui lòng chọn nhà cung cấp muốn xóa");
        }
    }//GEN-LAST:event_btnXoaNhaCCActionPerformed

    private void btnChiTietNCCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChiTietNCCActionPerformed
        // TODO add your handling code here:
        NhaCungCapDTO selectedNCC = this.getSelectedRowData();
        if (selectedNCC != null) {
            new ChiTietNCC(selectedNCC).setVisible(true);
        } else {
            JOptionPane.showMessageDialog(null, "Vui lòng chọn nhà cung cấp muốn xem chi tiết");
        }
    }//GEN-LAST:event_btnChiTietNCCActionPerformed

    private void btnXuatExcelNCCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXuatExcelNCCActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnXuatExcelNCCActionPerformed

    private void addIcon() {
        btnThemNhaCC.setIcon(new FlatSVGIcon("./res/icon/add.svg"));
        btnSuaNhaCC.setIcon(new FlatSVGIcon("./res/icon/edit.svg"));
        btnXoaNhaCC.setIcon(new FlatSVGIcon("./res/icon/delete.svg"));
        btnChiTietNCC.setIcon(new FlatSVGIcon("./res/icon/detail.svg"));
        btnXuatExcelNCC.setIcon(new FlatSVGIcon("./res/icon/export_excel.svg"));
    }

    private void setUpTable() {
        // Set ẩn hiển thị ô vuông khi bấm vào cell 
        tblNhaCC.setFocusable(false);
        
        // Set không cho cell có thể chỉnh sửa 
        tblNhaCC.setDefaultEditor(Object.class, null);
    }

    private void initAtt() {
        nhaCungCapBUS = new NhaCungCapBUS();
    }

    public void loadNCCData() {
        ArrayList<NhaCungCapDTO> nhaCungCapDTOArrayList = nhaCungCapBUS.getAllNhaCungCaps();

        // Get Table Model and clear data
        DefaultTableModel model = (DefaultTableModel) tblNhaCC.getModel();
        model.setRowCount(0);

        for (NhaCungCapDTO nhaCungCapDTO : nhaCungCapDTOArrayList) {
            model.addRow(new Object[]{
                    nhaCungCapDTO.getId(),
                    nhaCungCapDTO.getName(),
                    nhaCungCapDTO.getPhone(),
                    nhaCungCapDTO.getEmail()
            });
        }

        // Create renderer for table to align text center
        DefaultTableCellRenderer renderer = new DefaultTableCellRenderer();
        renderer.setHorizontalAlignment(SwingConstants.CENTER);

        for (int i = 0; i < tblNhaCC.getColumnCount(); i++) {
            tblNhaCC.getColumnModel().getColumn(i).setCellRenderer(renderer);
        }
    }

    private NhaCungCapDTO getSelectedRowData() {
        int selectedRowIndex = tblNhaCC.getSelectedRow();

        if (selectedRowIndex == -1) {
            return null;
        }

        int id = (int) tblNhaCC.getValueAt(selectedRowIndex, 0);
        return nhaCungCapBUS.getNCC(id);
    }

    private void timKiemHandler() {
        TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>((DefaultTableModel) tblNhaCC.getModel());
        tblNhaCC.setRowSorter(sorter);

        // Ô nhập tìm kiếm
        txtTimKiem.getDocument().addDocumentListener(new javax.swing.event.DocumentListener() {
            @Override
            public void insertUpdate(javax.swing.event.DocumentEvent e) {
                filter();
            }

            @Override
            public void removeUpdate(javax.swing.event.DocumentEvent e) {
                filter();
            }

            @Override
            public void changedUpdate(javax.swing.event.DocumentEvent e) {
                filter();
            }

            private void filter() {
                String keyword = txtTimKiem.getText().trim();
                if (keyword.isEmpty()) {
                    sorter.setRowFilter(null);
                } else {
                    sorter.setRowFilter(RowFilter.regexFilter("(?i)" + keyword));
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane asd;
    private javax.swing.JButton btnChiTietNCC;
    private javax.swing.JButton btnSuaNhaCC;
    private javax.swing.JButton btnThemNhaCC;
    private javax.swing.JButton btnXoaNhaCC;
    private javax.swing.JButton btnXuatExcelNCC;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel pnlCenter;
    private javax.swing.JPanel pnlTop;
    private javax.swing.JTable tblNhaCC;
    private javax.swing.JTextField txtTimKiem;
    // End of variables declaration//GEN-END:variables

}
