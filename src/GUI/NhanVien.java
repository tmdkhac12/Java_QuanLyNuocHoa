/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */

package GUI;

import BUS.KhachHangBUS;
import BUS.NhanVienBUS;
import DTO.KhachHangDTO;
import DTO.NhanVienDTO;
import GUI.KHang.ChiTietKHang;
import GUI.KHang.SuaKHang;
import GUI.NVien.ChiTietNhanVien;
import GUI.NVien.SuaNhanVien;
import GUI.NVien.ThemNhanVien;
import com.formdev.flatlaf.extras.FlatSVGIcon;

import javax.swing.*;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import java.util.ArrayList;

/**
 *
 * @author QUAN
 */
public class NhanVien extends javax.swing.JPanel {

    private NhanVienBUS nhanVienBUS;

    /** Creates new form NhanVien */
    public NhanVien() {
        // Set up NhanVien Panel's Components 
        initComponents();
        addIcon();
        setUpTable();
        loadDataToTable();

        initAtt();
        timKiemHandler();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlTop = new javax.swing.JPanel();
        btnThemNV = new javax.swing.JButton();
        btnSuaNV = new javax.swing.JButton();
        btnXoaNV = new javax.swing.JButton();
        btnChiTietNV = new javax.swing.JButton();
        btnXuatExcelNV = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtTimKiem = new javax.swing.JTextField();
        pnlCenter = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblNhanVien = new javax.swing.JTable();

        setPreferredSize(new java.awt.Dimension(1200, 800));
        setLayout(new java.awt.BorderLayout());

        pnlTop.setBackground(new java.awt.Color(255, 255, 255));
        pnlTop.setPreferredSize(new java.awt.Dimension(1200, 70));

        btnThemNV.setText("Thêm");
        btnThemNV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemNVActionPerformed(evt);
            }
        });
        pnlTop.add(btnThemNV);

        btnSuaNV.setText("Sửa");
        btnSuaNV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaNVActionPerformed(evt);
            }
        });
        pnlTop.add(btnSuaNV);

        btnXoaNV.setText("Xóa");
        btnXoaNV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaNVActionPerformed(evt);
            }
        });
        pnlTop.add(btnXoaNV);

        btnChiTietNV.setText("Chi tiết");
        btnChiTietNV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChiTietNVActionPerformed(evt);
            }
        });
        pnlTop.add(btnChiTietNV);

        btnXuatExcelNV.setText("Xuất excel");
        btnXuatExcelNV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXuatExcelNVActionPerformed(evt);
            }
        });
        pnlTop.add(btnXuatExcelNV);

        jLabel1.setText("Tìm kiếm :");
        pnlTop.add(jLabel1);

        txtTimKiem.setMinimumSize(new java.awt.Dimension(200, 30));
        txtTimKiem.setPreferredSize(new java.awt.Dimension(200, 30));
        pnlTop.add(txtTimKiem);

        add(pnlTop, java.awt.BorderLayout.NORTH);

        tblNhanVien.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"1", "Lê Khánh Hoàng", "hoang2", "hoang2", "Nhân Viên Bán Hàng", "Hoạt Động "},
                {"2", "Lê Công Duy", "duyduy", "duyduy", "Nhân Viên Bán Hàng", "Ngưng Hoạt Động"}
            },
            new String [] {
                "Mã NV", "Họ tên", "Tên đăng nhập", "Mật khẩu", "Nhóm quyền ", "Trạng thái tài khoản "
            }
        ));
        jScrollPane1.setViewportView(tblNhanVien);
        if (tblNhanVien.getColumnModel().getColumnCount() > 0) {
            tblNhanVien.getColumnModel().getColumn(0).setResizable(false);
            tblNhanVien.getColumnModel().getColumn(1).setResizable(false);
            tblNhanVien.getColumnModel().getColumn(2).setResizable(false);
            tblNhanVien.getColumnModel().getColumn(3).setResizable(false);
            tblNhanVien.getColumnModel().getColumn(4).setResizable(false);
            tblNhanVien.getColumnModel().getColumn(5).setResizable(false);
        }

        javax.swing.GroupLayout pnlCenterLayout = new javax.swing.GroupLayout(pnlCenter);
        pnlCenter.setLayout(pnlCenterLayout);
        pnlCenterLayout.setHorizontalGroup(
            pnlCenterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 853, Short.MAX_VALUE)
        );
        pnlCenterLayout.setVerticalGroup(
            pnlCenterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE)
        );

        add(pnlCenter, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void btnThemNVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemNVActionPerformed
        // TODO add your handling code here:
        new ThemNhanVien(this).setVisible(true);
    }//GEN-LAST:event_btnThemNVActionPerformed

    private void btnSuaNVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaNVActionPerformed
        // TODO add your handling code here:
        NhanVienDTO selectedNhanVien = this.getSelectedRowData();
        if (selectedNhanVien != null) {
            new SuaNhanVien(this, selectedNhanVien).setVisible(true);
        } else {
            JOptionPane.showMessageDialog(null, "Vui lòng chọn khách hàng muốn sửa thông tin");
        }
    }//GEN-LAST:event_btnSuaNVActionPerformed

    private void btnXoaNVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaNVActionPerformed
        // TODO add your handling code here:
        NhanVienDTO selectedNhanVien = this.getSelectedRowData();
        if (selectedNhanVien != null) {
            int id = selectedNhanVien.getId();

            int confirm = JOptionPane.showConfirmDialog(null, "Bạn có chắc chắn muốn xóa nhân viên này?", "Xác nhận xóa", JOptionPane.YES_NO_OPTION);
            if (confirm == JOptionPane.YES_OPTION) {
                if(nhanVienBUS.xoaNhanVien(id)) {
                    JOptionPane.showMessageDialog(this, "Xóa nhân viên thành công", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                    this.loadDataToTable();
                } else {
                    JOptionPane.showMessageDialog(this, "Xóa nhân viên thất bại", "Lỗi", JOptionPane.ERROR_MESSAGE);
                }
            }

        } else {
            JOptionPane.showMessageDialog(null, "Vui lòng chọn nhân viên muốn xóa");
        }
    }//GEN-LAST:event_btnXoaNVActionPerformed

    private void btnChiTietNVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChiTietNVActionPerformed
        // TODO add your handling code here:
        NhanVienDTO selectedNhanVien = this.getSelectedRowData();
        if (selectedNhanVien != null) {
            new ChiTietNhanVien(selectedNhanVien).setVisible(true);
        } else {
            JOptionPane.showMessageDialog(null, "Vui lòng chọn nhân viên muốn xem chi tiết");
        }
    }//GEN-LAST:event_btnChiTietNVActionPerformed

    private void btnXuatExcelNVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXuatExcelNVActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnXuatExcelNVActionPerformed

    private void initAtt() {
        nhanVienBUS = new NhanVienBUS();
    }

    private void addIcon() {
        btnThemNV.setIcon(new FlatSVGIcon("./res/icon/add.svg"));
        btnSuaNV.setIcon(new FlatSVGIcon("./res/icon/edit.svg"));
        btnXoaNV.setIcon(new FlatSVGIcon("./res/icon/delete.svg"));
        btnChiTietNV.setIcon(new FlatSVGIcon("./res/icon/detail.svg"));
        btnXuatExcelNV.setIcon(new FlatSVGIcon("./res/icon/export_excel.svg"));
    }
    
    private void setUpTable() {
        // Set ẩn hiển thị ô vuông khi bấm vào cell 
        tblNhanVien.setFocusable(false);
        
        // Set không cho cell có thể chỉnh sửa 
        tblNhanVien.setDefaultEditor(Object.class, null);
    }

    public void loadDataToTable() {
        NhanVienBUS nhanVienBUS = new NhanVienBUS();
        ArrayList<NhanVienDTO> nhanVienDTOArrayList = nhanVienBUS.getAllNhanViens();

        // Get Table Model and clear data
        DefaultTableModel model = (DefaultTableModel) tblNhanVien.getModel();
        model.setRowCount(0);

        for (NhanVienDTO nhanVienDTO : nhanVienDTOArrayList) {
            String status = (nhanVienDTO.isStatus() ? "Hoạt Động" : "Ngưng hoạt động");
            model.addRow(new Object[]{
                    nhanVienDTO.getId(),
                    nhanVienDTO.getName(),
                    nhanVienDTO.getUsername(),
                    nhanVienDTO.getPassword(),
                    nhanVienDTO.getRoleGroupName(),
                    status
            });
        }

        // Create renderer for table to align text center
        DefaultTableCellRenderer renderer = new DefaultTableCellRenderer();
        renderer.setHorizontalAlignment(SwingConstants.CENTER);

        for (int i = 0; i < tblNhanVien.getColumnCount(); i++) {
            tblNhanVien.getColumnModel().getColumn(i).setCellRenderer(renderer);
        }
    }

    private NhanVienDTO getSelectedRowData() {
        int selectedRowIndex = tblNhanVien.getSelectedRow();

        if (selectedRowIndex == -1) {
            return null;
        }

        int id = (int) tblNhanVien.getValueAt(selectedRowIndex, 0);
        return nhanVienBUS.getNhanVien(id);
    }

    private void timKiemHandler() {
        TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>((DefaultTableModel) tblNhanVien.getModel());
        tblNhanVien.setRowSorter(sorter);

        // Ô nhập tìm kiếm
        txtTimKiem.getDocument().addDocumentListener(new javax.swing.event.DocumentListener() {
            @Override
            public void insertUpdate(javax.swing.event.DocumentEvent e) {
                filter();
            }

            @Override
            public void removeUpdate(javax.swing.event.DocumentEvent e) {
                filter();
            }

            @Override
            public void changedUpdate(javax.swing.event.DocumentEvent e) {
                filter();
            }

            private void filter() {
                String keyword = txtTimKiem.getText().trim();
                if (keyword.isEmpty()) {
                    sorter.setRowFilter(null);
                } else {
                    sorter.setRowFilter(RowFilter.regexFilter("(?i)" + keyword));
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnChiTietNV;
    private javax.swing.JButton btnSuaNV;
    private javax.swing.JButton btnThemNV;
    private javax.swing.JButton btnXoaNV;
    private javax.swing.JButton btnXuatExcelNV;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel pnlCenter;
    private javax.swing.JPanel pnlTop;
    private javax.swing.JTable tblNhanVien;
    private javax.swing.JTextField txtTimKiem;
    // End of variables declaration//GEN-END:variables

}
